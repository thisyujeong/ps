/**
 * 8진수를 한 자리마다 대응하는 2진수로 변환한다.
 * 314가 주어진다면 3은 011, 1은 001, 4는 100
 *
 * 문제에서 수의 길은ㄴ 333,334를 넘지 않는다고 했음
 * 한번에 주어진 문제를 2진수로 변환하면 길이가 너무 길어져 조건을 만족하지 못하는 케이스가 발생
 * 따라서, 한자리씩 쪼개서 2진수로 변환하고 문자열로 변환된 2진수를 함치는 방법으로 진행
 */
let s = require('fs').readFileSync('./input.txt').toString().trim().split('');
let a = '';

for (let i = 0; i < s.length; i++) {
  if (i !== 0) {
    // 2진수로 변환된 문자열은 앞에 0이 오는 경우 제거된 상태로 반환됨
    // padStart를 사용하여 세자리 수(3비트)를 맞춰 빈 자리에 0을 채움
    a = a + parseInt(s[i], 8).toString(2).padStart(3, '0');
  } else {
    // 문제에서 2진수는 주어진 수가 0이 아니라면, 1로 시작해야한다고 했음
    // 즉, 세자리를 맞출 필요가 없다는 의미로 그대로 2진수 변환만 진행
    a = a + parseInt(s[i], 8).toString(2);
  }
}

console.log(a);

/**
 * 다른 사람 풀이 분석 - 배열 또는 객체를 이용한 풀이.
 * 8진수를 2진수로 표현할 수 있는 범위는 1부터 7까지 고정적이므로 배열/객체를 활용할 수 있음.
 * 생각도 못한 방식이라 놀랐음..!
 * 메모리 43060kb -> 29176kb, 속도 312 -> 236
 */
let answer = '';

const bin = ['000', '001', '010', '011', '100', '101', '110', '111'];
const first = ['0', '1', '10', '11', '100', '101', '110', '111'];

while (s.length > 1) {
  answer = bin[s.pop()] + answer;
}

console.log(first[s.pop()] + answer);
