/**
 * 풀이 15분
 *
 * BigInt 주의!
 *
 * 주로 로직은 맞았으나 제출 결과 실패가 되는 경우, 주어진 입력값의 경계값에서 오류 케이스가 발생할 확률이 높다.
 * 입력으로 주어지는 n의 범위가 1이상 116이하라고 주어졌다.
 * 경계값인 116를 입력으로 넣어 테스트해본 결과 무수히 큰 숫자가 나오는 것을 확인했음 (7536815746437618530)
 *
 * 자바스크립트에서 Number 자료형이 표현할 수 있는 최대치는 2^53 - 1이다.
 * 2^53 - 1 = 9,007,199,254,740,992
 * n = 116일떄 결과값 = 7536815746437618530
 *
 * 따라서 2^53 -1 이상의 값을 표현할 수 있는 BigInt 자료형을 활용하고, 문자열로 변환했다.
 */
const n = +require('fs').readFileSync('./input.txt').toString().trim();
const dp = new Array(n).fill(1);

for (let i = 3; i <= n; i++) {
  dp[i] = BigInt(dp[i - 1]) + BigInt(dp[i - 3]);
}
console.log(String(dp[n - 1]));
